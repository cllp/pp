//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "MailServiceSoap", Namespace = "http://tempuri.org/")]
public partial class MailService : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback SendOperationCompleted;

    /// <remarks/>
    public MailService(string url)
    {
        this.Url = url;
    }

    /// <remarks/>
    public event SendCompletedEventHandler SendCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Send", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool Send(string application, string from, string to, string cc, string subject, string body)
    {
        object[] results = this.Invoke("Send", new object[] {
                    application,
                    from,
                    to,
                    cc,
                    subject,
                    body});
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginSend(string application, string from, string to, string cc, string subject, string body, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("Send", new object[] {
                    application,
                    from,
                    to,
                    cc,
                    subject,
                    body}, callback, asyncState);
    }

    /// <remarks/>
    public bool EndSend(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }

    /// <remarks/>
    public void SendAsync(string application, string from, string to, string cc, string subject, string body)
    {
        this.SendAsync(application, from, to, cc, subject, body, null);
    }

    /// <remarks/>
    public void SendAsync(string application, string from, string to, string cc, string subject, string body, object userState)
    {
        if ((this.SendOperationCompleted == null))
        {
            this.SendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOperationCompleted);
        }
        this.InvokeAsync("Send", new object[] {
                    application,
                    from,
                    to,
                    cc,
                    subject,
                    body}, this.SendOperationCompleted, userState);
    }

    private void OnSendOperationCompleted(object arg)
    {
        if ((this.SendCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.SendCompleted(this, new SendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void SendCompletedEventHandler(object sender, SendCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class SendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal SendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
        base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public bool Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}
